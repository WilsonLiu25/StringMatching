Preprocessing time: O(m)
Matching time: O((n - m + 1)m)

Begin
    Rabin-Karp(userString, userPattern, mod)
        maxChar = 256
        stringLength = userString.length
        patternLength = userPattern.length
        h = (h*maxChar) % mod
        patternHash = 0
        StringHash = 0

        for i=0 to patternLength do
            patternHash = (maxChar * patternHash + userPattern.charAt(i)) % mod;
            stringHash = (maxChar * stringHash + userString.charAt(i)) % mod;
        done
        
        for i=0 to (stringLength - patternLength) do
            if (patternHash==stringHash) then
                for j=0 to patternLength do
                    if (userString[i + j] NOT EQUAL pattern[j]) then
                        BREAK
                    endif
                done

                if(j==patternLength) then
                    PRINT "Pattern found"
                endif
            endif

            if(i<(stringLength-patternLength)) then
                stringHash := (d * (stringHash - userString[i] * h) +
                            userString[i + patternLength]) % mod
                if(stringHash < 0) then
                    stringHash = (stringHash + mod)
                endif
            endif
        done
End